// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: define/CFAmulet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto.Config.Define {

  /// <summary>Holder for reflection information generated from define/CFAmulet.proto</summary>
  public static partial class CFAmuletReflection {

    #region Descriptor
    /// <summary>File descriptor for define/CFAmulet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CFAmuletReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVkZWZpbmUvQ0ZBbXVsZXQucHJvdG8SE1Byb3RvLkNvbmZpZy5EZWZpbmUi",
            "yQIKCENGQW11bGV0EgoKAklkGAEgASgREgwKBFR5cGUYAiABKBESEgoKQW11",
            "bGV0TmFtZRgDIAEoERIPCgdRdWFsaXR5GAQgASgREksKD0FtdWxldFNraWxs",
            "SWNvbhgFIAMoCzIyLlByb3RvLkNvbmZpZy5EZWZpbmUuQ0ZBbXVsZXQuQW11",
            "bGV0U2tpbGxJY29uRW50cnkSDAoETmFtZRgGIAEoERIMCgREZXNjGAcgASgR",
            "EhEKCURlc2NQYXJhbRgIIAEoCRIOCgZJdGVtSWQYCSABKBESFAoMQW11bGV0",
            "SXRlbUlkGAogASgREhEKCUFtdWxldFBpYxgLIAEoCRIRCglBbXVsZXRMaWUY",
            "DCABKAkaNgoUQW11bGV0U2tpbGxJY29uRW50cnkSCwoDa2V5GAEgASgJEg0K",
            "BXZhbHVlGAIgASgJOgI4AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Config.Define.CFAmulet), global::Proto.Config.Define.CFAmulet.Parser, new[]{ "Id", "Type", "AmuletName", "Quality", "AmuletSkillIcon", "Name", "Desc", "DescParam", "ItemId", "AmuletItemId", "AmuletPic", "AmuletLie" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CFAmulet : pb::IMessage<CFAmulet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CFAmulet> _parser = new pb::MessageParser<CFAmulet>(() => new CFAmulet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CFAmulet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Config.Define.CFAmuletReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFAmulet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFAmulet(CFAmulet other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      amuletName_ = other.amuletName_;
      quality_ = other.quality_;
      amuletSkillIcon_ = other.amuletSkillIcon_.Clone();
      name_ = other.name_;
      desc_ = other.desc_;
      descParam_ = other.descParam_;
      itemId_ = other.itemId_;
      amuletItemId_ = other.amuletItemId_;
      amuletPic_ = other.amuletPic_;
      amuletLie_ = other.amuletLie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFAmulet Clone() {
      return new CFAmulet(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "AmuletName" field.</summary>
    public const int AmuletNameFieldNumber = 3;
    private int amuletName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AmuletName {
      get { return amuletName_; }
      set {
        amuletName_ = value;
      }
    }

    /// <summary>Field number for the "Quality" field.</summary>
    public const int QualityFieldNumber = 4;
    private int quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "AmuletSkillIcon" field.</summary>
    public const int AmuletSkillIconFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_amuletSkillIcon_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> amuletSkillIcon_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> AmuletSkillIcon {
      get { return amuletSkillIcon_; }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 6;
    private int name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "Desc" field.</summary>
    public const int DescFieldNumber = 7;
    private int desc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Desc {
      get { return desc_; }
      set {
        desc_ = value;
      }
    }

    /// <summary>Field number for the "DescParam" field.</summary>
    public const int DescParamFieldNumber = 8;
    private string descParam_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DescParam {
      get { return descParam_; }
      set {
        descParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 9;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "AmuletItemId" field.</summary>
    public const int AmuletItemIdFieldNumber = 10;
    private int amuletItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AmuletItemId {
      get { return amuletItemId_; }
      set {
        amuletItemId_ = value;
      }
    }

    /// <summary>Field number for the "AmuletPic" field.</summary>
    public const int AmuletPicFieldNumber = 11;
    private string amuletPic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AmuletPic {
      get { return amuletPic_; }
      set {
        amuletPic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AmuletLie" field.</summary>
    public const int AmuletLieFieldNumber = 12;
    private string amuletLie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AmuletLie {
      get { return amuletLie_; }
      set {
        amuletLie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CFAmulet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CFAmulet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (AmuletName != other.AmuletName) return false;
      if (Quality != other.Quality) return false;
      if (!AmuletSkillIcon.Equals(other.AmuletSkillIcon)) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (DescParam != other.DescParam) return false;
      if (ItemId != other.ItemId) return false;
      if (AmuletItemId != other.AmuletItemId) return false;
      if (AmuletPic != other.AmuletPic) return false;
      if (AmuletLie != other.AmuletLie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (AmuletName != 0) hash ^= AmuletName.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      hash ^= AmuletSkillIcon.GetHashCode();
      if (Name != 0) hash ^= Name.GetHashCode();
      if (Desc != 0) hash ^= Desc.GetHashCode();
      if (DescParam.Length != 0) hash ^= DescParam.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (AmuletItemId != 0) hash ^= AmuletItemId.GetHashCode();
      if (AmuletPic.Length != 0) hash ^= AmuletPic.GetHashCode();
      if (AmuletLie.Length != 0) hash ^= AmuletLie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(Type);
      }
      if (AmuletName != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(AmuletName);
      }
      if (Quality != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Quality);
      }
      amuletSkillIcon_.WriteTo(output, _map_amuletSkillIcon_codec);
      if (Name != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(Name);
      }
      if (Desc != 0) {
        output.WriteRawTag(56);
        output.WriteSInt32(Desc);
      }
      if (DescParam.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DescParam);
      }
      if (ItemId != 0) {
        output.WriteRawTag(72);
        output.WriteSInt32(ItemId);
      }
      if (AmuletItemId != 0) {
        output.WriteRawTag(80);
        output.WriteSInt32(AmuletItemId);
      }
      if (AmuletPic.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AmuletPic);
      }
      if (AmuletLie.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AmuletLie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(Type);
      }
      if (AmuletName != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(AmuletName);
      }
      if (Quality != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Quality);
      }
      amuletSkillIcon_.WriteTo(ref output, _map_amuletSkillIcon_codec);
      if (Name != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(Name);
      }
      if (Desc != 0) {
        output.WriteRawTag(56);
        output.WriteSInt32(Desc);
      }
      if (DescParam.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DescParam);
      }
      if (ItemId != 0) {
        output.WriteRawTag(72);
        output.WriteSInt32(ItemId);
      }
      if (AmuletItemId != 0) {
        output.WriteRawTag(80);
        output.WriteSInt32(AmuletItemId);
      }
      if (AmuletPic.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AmuletPic);
      }
      if (AmuletLie.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AmuletLie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Type);
      }
      if (AmuletName != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AmuletName);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Quality);
      }
      size += amuletSkillIcon_.CalculateSize(_map_amuletSkillIcon_codec);
      if (Name != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Name);
      }
      if (Desc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Desc);
      }
      if (DescParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescParam);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ItemId);
      }
      if (AmuletItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AmuletItemId);
      }
      if (AmuletPic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AmuletPic);
      }
      if (AmuletLie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AmuletLie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CFAmulet other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.AmuletName != 0) {
        AmuletName = other.AmuletName;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      amuletSkillIcon_.Add(other.amuletSkillIcon_);
      if (other.Name != 0) {
        Name = other.Name;
      }
      if (other.Desc != 0) {
        Desc = other.Desc;
      }
      if (other.DescParam.Length != 0) {
        DescParam = other.DescParam;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.AmuletItemId != 0) {
        AmuletItemId = other.AmuletItemId;
      }
      if (other.AmuletPic.Length != 0) {
        AmuletPic = other.AmuletPic;
      }
      if (other.AmuletLie.Length != 0) {
        AmuletLie = other.AmuletLie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            Type = input.ReadSInt32();
            break;
          }
          case 24: {
            AmuletName = input.ReadSInt32();
            break;
          }
          case 32: {
            Quality = input.ReadSInt32();
            break;
          }
          case 42: {
            amuletSkillIcon_.AddEntriesFrom(input, _map_amuletSkillIcon_codec);
            break;
          }
          case 48: {
            Name = input.ReadSInt32();
            break;
          }
          case 56: {
            Desc = input.ReadSInt32();
            break;
          }
          case 66: {
            DescParam = input.ReadString();
            break;
          }
          case 72: {
            ItemId = input.ReadSInt32();
            break;
          }
          case 80: {
            AmuletItemId = input.ReadSInt32();
            break;
          }
          case 90: {
            AmuletPic = input.ReadString();
            break;
          }
          case 98: {
            AmuletLie = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            Type = input.ReadSInt32();
            break;
          }
          case 24: {
            AmuletName = input.ReadSInt32();
            break;
          }
          case 32: {
            Quality = input.ReadSInt32();
            break;
          }
          case 42: {
            amuletSkillIcon_.AddEntriesFrom(ref input, _map_amuletSkillIcon_codec);
            break;
          }
          case 48: {
            Name = input.ReadSInt32();
            break;
          }
          case 56: {
            Desc = input.ReadSInt32();
            break;
          }
          case 66: {
            DescParam = input.ReadString();
            break;
          }
          case 72: {
            ItemId = input.ReadSInt32();
            break;
          }
          case 80: {
            AmuletItemId = input.ReadSInt32();
            break;
          }
          case 90: {
            AmuletPic = input.ReadString();
            break;
          }
          case 98: {
            AmuletLie = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
